{"@t":"2024-02-29T09:17:47.9149736Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(Exception)UserGet: Unknown login/email Alex","Message":"UserGet: Unknown login/email Alex","StackTrace":"   at OptimaJet.WorkflowServer.RuleProviders.IdentityRuleProvider.GetUserByEmailOrLoginAsync(ProcessInstance processInstance, WorkflowRuntime runtime, String parameter)\n   at OptimaJet.WorkflowServer.RuleProviders.IdentityRuleProvider.GetUserIdentities(ProcessInstance processInstance, WorkflowRuntime runtime, String parameter)\n   at OptimaJet.Workflow.Core.Runtime.AggregatingRuleProvider.GetIdentitiesAsync(ProcessInstance processInstance, WorkflowRuntime runtime, String ruleName, String parameter, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.AuthorizationRuleExecutor.<>c__DisplayClass6_0.<<GetIdentitiesAsync>g__InvokeRuleFromProviderGetSyncAsync|1>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Execution.AuthorizationRuleExecutor.GetIdentitiesAsync(ProcessInstance processInstance, String ruleName, String parameter, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.AuthorizationRuleExecutor.GetActorsAsync(ProcessInstance processInstance, TransitionDefinition transition, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntimeGetActorsApi.GetAllActorsWithCommandsForCommandTransitionsInternalAsync(WorkflowRuntime runtime, ProcessInstance processInstance, ProcessInstancesTree tree, ActivityDefinition selectedActivity, List`1 classifiers, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntimeGetActorsApi.GetAllActorsWithCommandsInternalAsync(WorkflowRuntime runtime, Guid processId, Dictionary`2 cache, String specificActivityName, List`1 classifiers, ProcessInstancesTree tree, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntimeGetActorsApi.GetAllActorsWithCommandsForCommandTransitionsInternalAsync(WorkflowRuntime runtime, TreeSearchFilter filter, List`1 classifiers, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntimeGetActorsApi.GetAllActorsForCommandTransitionsAsync(WorkflowRuntime runtime, TreeSearchFilter filter, List`1 classifiers, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntimeGetActorsApi.GetAllActorsForCommandTransitionsAsync(WorkflowRuntime runtime, Guid processId, List`1 classifiers, Boolean beginningWithRoot, String activityName, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntimeGetActorsApi.GetAllActorsForDirectCommandTransitionsAsync(WorkflowRuntime runtime, Guid processId, Boolean beginningWithRoot, String activityName, CancellationToken token)\n   at OptimaJet.WorkflowServer.DatabaseOperations.FillInboxAsync(WorkflowRuntime wfruntime, PostgreSQLProvider provider, Guid processId)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.FillInboxAsync(ProcessStatusChangedEventArgs e)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowRuntime_ProcessStatusChanged(Object sender, ProcessStatusChangedEventArgs e, CancellationToken token)\n   at OptimaJet.Workflow.Core.Utils.AsyncEventHandlerExtensions.InvokeSerialAsync[TEventArgs](AsyncEventHandler`1 handler, Object sender, TEventArgs args, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.InvokeProcessStatusChangedAsync(ProcessStatusChangedEventArgs args)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.SetProcessNewStatusAsync(ProcessInstance processInstance, ProcessStatus newStatus, Boolean suppressEvent)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.SetProcessNewStatusAsync(ProcessInstance processInstance, ProcessStatus newStatus, Boolean suppressEvent)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteCreatedProcessAsync(ProcessInstance processInstance, String identityId, String impersonatedIdentityId, CancellationToken token, ProcessInstancesTree processInstancesTree)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.<>c__DisplayClass11_0.<<InitCreatedProcessAsync>b__1>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Runtime.MultiThreadProcessExecutor.ExecuteAsync(WorkflowRuntime runtime, ProcessInstance processInstance, ProcessStatus status, TransitionDefinition executedTransition, Func`1 needNewThreadCheck, Func`2 action)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-29T09:18:17.5465256Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-29T10:10:21.4799488Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-29T16:40:43.5131419Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
