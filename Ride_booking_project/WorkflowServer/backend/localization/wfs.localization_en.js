window.WFEServerLang = {
  common:{
    toolbarappbutton: "App" 
  },
  sidemenu: {
      dashboard: "Dashboard",
      api: "API",
      workflowapi: "Workflow API",
      callbackapi: "Callback API",
      settings: "Settings",
      forms: "Forms",
      workflow: "Workflow",
      schemes: "Manage schemes",
      codeactions: "Global code actions",
      workflowinstances: "Manage instances",
      businessflow: "Business flow",
      reports: "Reports",
      support: "Support",
      documentation: "Documentation",
      faq: "FAQs",
      emailsupport: "Email support"
  },
  searchbox:{
      model: "Model",
      form: "Form",
      formdata: "Form data",
      actionhandler: "Action Handler",
      workflow: "Workflow",
      businessflow: "Business Flow",
      user: "User",
      group: "Group",
      role: "Role",
      codeaction: "CodeAction"
  },
  msg: {
      serverglobalerror: "There was a global error in the server's operation, requiring your immediate attention",
      globalcodeactionshaveerrors: "Some of the Global Code Actions have compilation errors. You need to fix them and restart the server",confirmdelete: 'Are you sure you wantto delete selected item(s)?',
      fieldrequired: "This field is required",
      objectnotfound: "The object has not been found",
      unchangedobject: "No need to save an unchanged object",
      saveok: "The changes have been saved",
      checkerrors: "Something went wrong; check the errors",
      lookdevconsole: "Look for details in the development console in your browser",
      appcachereseted: "The application cache has been reset",
      compileok: "Compilation succeeded",
      click: "Click",
      here: "here",
      needtoselectitems: "You need to select some items",
      fileupoaded: "The file has been uploaded",
      notavailableyet: "There are no available settings yet",
      moreinformation: "More information is available in the developer console",
      savedatasuccess: "The changes have been applied",
      notsupported: "Not supported",
      commandexecutioncompleted: "Command execution has been completed",
      newstateset: "The new state was set",
      checkerrorsonform: "Check the form for errors",
      commingsoon: "Coming soon",
      selectrowsfordelete: "Select rows for deletion",
      rowsdeleted: "Rows have been deleted",
      totalcount: "Total count:",
      testcomplete: "The test has been completed"
  },
  requesterror:{
      status0: "Not connect.\n Verify Network.",
      status404: "Requested page not found. [404]",
      status500: "Internal Server Error [500].",
      parsererror: "Requested JSON parse failed.",
      timeout: "Time out error.",
      abort: "Ajax request aborted.",
      uncaught: "Uncaught Error.",
      configapi: "Error request Config API"
  },
  button:{
      save: "Save",
      cancel: "Cancel",
      close: "Close",
      create: "Create",
      delete: "Delete",
      resetappcache: "Reset app cache",
      compile: "Compile",
      refresh: "Refresh",
      applyselectedchanges: "Apply selected changes",
      select: "Select",
      deselect: "Deselect",
      selectall: "Select all",
      deselectall: "Deselect all",
      download: "Download",
      upload: "Upload",
      downloadbpmn: "Download BPMN",
      uploadbpmn: "Upload BPMN",
      workflow: "Workflow",
      security: "Security",
      ok: "OK",
      apply: "Apply",
      search: "Search",
      restart: "Restart"
  },
  collectioneditor:{
    add: "Add",
    delete: "Delete"
  },
  workflowbar: {
      setstate: "Set state"
  },
  column: {
      code: "Code",
      name: "Name",
      type: "Type",
      deletefinalized: "Delete finalized",
      dontfillindox: "Don't fill inbox",
      dontpreexecute: "Don't pre Execute"
  },
  field: {
      code: "Code",
      name: "Name",
      type: "Type",
      comment: "Comment",
      attributes: "Attributes",
      triggers: "Triggers",
      action: "Action",
      parameter: "Parameter",
      changes: "Changes",
      readonly: "ReadOnly" 
  },
  license:{
      expipedlabel: "License expiration date",
      freeupdatedatalabel: "Free update date",
      licensechecktype: "License check type",
      licensee: "Licensee"
  },
  form:{
      title: "Forms",
      sourcefield: "Source"      
  },
  codeaction:{
    title: "Code actions",
    defineonservercolumn: 'Defined on Server',
    defineonservermsg : "This object is defined on server. Your can't edit it in admin panel.",
    defineonserverblockdeletemsg: "One of deleting objects is defined on server. Your can't delete it in admin panel.",
    usingsfield: "Usings"
  },
  businessflow: {
      title: "Business flow",
      schemecolumn: "Scheme",
      defaultformcolumn: "Default Form",
      updatestatesbutton: "Update states",
      mappingfield: "Mapping",
      statescolumn: "States",
      rolescolumn: "Roles",
      formcolumn: "Form",
      anyroleitem: "Any role",
      anystateitem : "Any state"
  },
  workflow: {
      title: "Workflow schemes",
      schemesaved: "The scheme has been saved!",
      schemesettingchanged: "Scheme setting has been changed!",
      clearschemebutton: "Clear scheme",
      messagetitle: "Message",
      restartsuccess: "The server was restarted successfully!",
      createinstance: "Create an instance"
  },
  workflowinstance: {
      title: "Manage instances",
      schemecolumn: "Scheme",
      statuscolumn: "Status",
      activitycolumn: 'Activity',
      statecolumn: 'State',

      setstatebutton: "Set state",
      setinstancestatusbutton: "Set instance status",
      activityfield: "Activity",
      statefield: "State",
      statechangedmsg: "The process state has been changed!",
      instancestatuschangedmsg: "The instance status has been changed!"
  },
  report: {
    title: "Reports",
    clearstats: "Clear statistics data",
    clearstatsmsg: "Statistics data are removed!"
  },
  logs: {
    settings: "Log settings",
    consoleTarget: "Console",
    debugTarget: "VS debug output",
    fileTarget: "File",
    eventLogTarget: "Windows Event Log",
    logEvents: "Log events:",
    debug: "Debug",
    error: "Error",
    information: "Info",
    targetEnabled: "Logger target enabled",
    targetDisabled: "Logger target disabled",
    logLevelEnabled: "Log Level enabled",
    logLevelDisabled: "Log Level disabled",
    extendedSettings: "Extended settings",
    fileName: "File name",
    maxFileSize: "Max file size (bytes)",
    or: "OR",
    infinite: "Infinite",
    year: "Year",
    month: "Month",
    day: "Day",
    hour: "Hour",
    minute: "Minute",
    rollingInterval: "Rolling interval",
    maxNumberOfFiles: "Max number of files",
    update: "Update",
    cancel: "Cancel",
    filenameRequired: "File name is required",
    fileSizeError: "Max file size should be a positive number",
    fileTargetSettingsUpdated: "File target settings updated",
    maxNumberOfFilesError: "Max number of files should be a positive number"
  },
  logspage: {
    pageTitle: "Logs",
    download: "Download",
    search: "Search",
    required: function(name) { return "Field " + name + " is required";},
    fileSearchResult: function(count) { return "Found " + count + "file(s)";},
    maxNumberOfEntries: "Max number of entries",
    from: "From",
    to: "To",
    maxNumberOfEntriesShouldBePositive: "Max number of entries should be a positive number'",
    copy: "Copy",
    copied: "Copied!",
    type: "Type",
    date: "Date & time",
    message: "Message",
    copySelected: "Copy selected",
    logEntry: "Log entry",
    details: "Details",
    errorMessage: "Error message:",
    stackTraces: "Stack traces:",
    exceptions: "Exceptions:"
  }
}