{"@t":"2024-02-22T15:59:31.3898979Z","@mt":"Configuration has been download on file system {Parameters}","Parameters":null}
{"@t":"2024-02-22T17:25:53.6175181Z","@mt":"Shutting down..."}
{"@t":"2024-02-22T17:25:55.0480849Z","@mt":"Starting global code actions compilation {Parameters}","Parameters":{"RuntimeId":"00000000-0000-0000-0000-000000000000"}}
{"@t":"2024-02-22T17:25:55.0609954Z","@mt":"Global code actions compilation finished {Parameters}","Parameters":{"RuntimeId":"00000000-0000-0000-0000-000000000000"}}
{"@t":"2024-02-22T17:25:55.0786910Z","@mt":"Starting SingleServerTimerManager {Parameters}","Parameters":{"RuntimeId":"00000000-0000-0000-0000-000000000000"}}
{"@t":"2024-02-22T17:28:55.1341075Z","@mt":"Configuration has been download on file system {Parameters}","Parameters":null}
{"@t":"2024-02-22T17:30:53.6795965Z","@mt":"Configuration has been download on file system {Parameters}","Parameters":null}
{"@t":"2024-02-22T17:35:25.3840795Z","@mt":"Configuration has been download on file system {Parameters}","Parameters":null}
{"@t":"2024-02-22T18:21:01.6176644Z","@mt":"Configuration has been download on file system {Parameters}","Parameters":null}
{"@t":"2024-02-22T18:53:29.9142346Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidOperationException)(1:18): error CS1002: ; expected","Message":"(1:18): error CS1002: ; expected\n","StackTrace":"   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.Compile(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors, List`1 excludes)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.GetCodeActionsInvoker(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.CompileCodeActions(ProcessDefinition processDefinition, Guid schemeId)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.PrepareProcessDefinition(ProcessDefinition processDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewSchemeAsync(String schemeCode, IDictionary`2 parameters)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewProcessAsync(Guid processId, String schemeCode, IDictionary`2 parameters, String tenantId)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-22T18:55:15.0997533Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidOperationException)(1:18): error CS1002: ; expected","Message":"(1:18): error CS1002: ; expected\n","StackTrace":"   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.Compile(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors, List`1 excludes)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.GetCodeActionsInvoker(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.CompileCodeActions(ProcessDefinition processDefinition, Guid schemeId)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.PrepareProcessDefinition(ProcessDefinition processDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateProcessDefinition(SchemeDefinition`1 schemeDefinition, Boolean dontPrepare)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.GetProcessDefinition(SchemeDefinition`1 schemeDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewProcessAsync(Guid processId, String schemeCode, IDictionary`2 parameters, String tenantId)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-22T18:57:12.6836954Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidOperationException)(1:18): error CS1002: ; expected","Message":"(1:18): error CS1002: ; expected\n","StackTrace":"   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.Compile(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors, List`1 excludes)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.GetCodeActionsInvoker(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.CompileCodeActions(ProcessDefinition processDefinition, Guid schemeId)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.PrepareProcessDefinition(ProcessDefinition processDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateProcessDefinition(SchemeDefinition`1 schemeDefinition, Boolean dontPrepare)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.GetProcessDefinition(SchemeDefinition`1 schemeDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewProcessAsync(Guid processId, String schemeCode, IDictionary`2 parameters, String tenantId)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-22T18:59:18.1626789Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidOperationException)(1:18): error CS1002: ; expected","Message":"(1:18): error CS1002: ; expected\n","StackTrace":"   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.Compile(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors, List`1 excludes)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.GetCodeActionsInvoker(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.CompileCodeActions(ProcessDefinition processDefinition, Guid schemeId)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.PrepareProcessDefinition(ProcessDefinition processDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateProcessDefinition(SchemeDefinition`1 schemeDefinition, Boolean dontPrepare)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.GetProcessDefinition(SchemeDefinition`1 schemeDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewProcessAsync(Guid processId, String schemeCode, IDictionary`2 parameters, String tenantId)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-22T19:04:04.9765925Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessAlreadyExistsException)Process with the id = ecf9bcf0-c07e-d05a-0599-f455109f8690 already exists","Message":"Process with the id = ecf9bcf0-c07e-d05a-0599-f455109f8690 already exists","StackTrace":"   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.InitializeProcessAsync(ProcessInstance processInstance)\n   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.InitializeProcessAsync(ProcessInstance processInstance)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-22T19:04:27.2298212Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(Exception)AccessToken is not valid! Check 'token' parameter in the query.","Message":"AccessToken is not valid! Check 'token' parameter in the query.","StackTrace":"   at OptimaJet.WorkflowServer.WorkflowServerRuntime.CheckAccessAsync(HttpContext httpContext, NameValueCollection queryCollection)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)\n   at OptimaJet.WorkflowServer.HttpRequestsProcessor.<>c__DisplayClass13_0.<<SubscribeProcessing>g__WorkflowApiResponse|1>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.WorkflowServer.HttpRequestsProcessor.<>c__DisplayClass13_0.<<SubscribeProcessing>b__10>d.MoveNext()"}}
{"@t":"2024-02-22T19:09:06.2943038Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(Exception)Parameter 'processid' is required and must be is GUID! Use such URL format: workflowapi/{operation}/{processid}.","Message":"Parameter 'processid' is required and must be is GUID! Use such URL format: workflowapi/{operation}/{processid}.","StackTrace":"   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-22T19:09:59.8347301Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(Exception)Parameter 'processid' is required and must be is GUID! Use such URL format: workflowapi/{operation}/{processid}.","Message":"Parameter 'processid' is required and must be is GUID! Use such URL format: workflowapi/{operation}/{processid}.","StackTrace":"   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-22T19:10:21.6523826Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(Exception)Parameter 'schemecode' is required!","Message":"Parameter 'schemecode' is required!","StackTrace":"   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-22T19:11:35.5266202Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
