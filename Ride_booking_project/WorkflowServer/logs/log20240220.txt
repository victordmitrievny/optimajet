{"@t":"2024-02-20T10:12:22.4118100Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(Exception)Error while pre executing process ProcessId=b139ff0d-58b7-ee47-71ad-d87a6dd0112c when executing Activity: Card,Transition: IncomingPatient_Activity_1_1\n->(ArgumentException)Can't be null or empty (Parameter 'name')","Message":"Can't be null or empty (Parameter 'name')","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.GetParameterAsync(String name)\n   at OptimaJet.Workflow.Plugins.BasicPlugin.ConditionCheckParameterAsync(ProcessInstance processInstance, WorkflowRuntime runtime, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Plugins.CustomWorkflowProviders.WorkflowActionProvider`4.ExecuteConditionAsync(String name, ProcessInstance processInstance, WorkflowRuntime runtime, String actionParameter, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.AggregatingActionProvider.ExecuteConditionAsync(String name, ProcessInstance processInstance, WorkflowRuntime runtime, String actionParameter, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteConditionFromProviderAsync(String conditionName, ConditionDefinition condition)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.<>c__DisplayClass34_0.<<CheckConditionsAsync>g__CheckActionCondition|3>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.<>c__DisplayClass34_0.<<CheckConditionsAsync>g__CheckActionConditions|2>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.CheckConditionsAsync(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.TryExecuteConditionalCondition()\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.PreExecuteProcessResponse(ExecutionResponse response)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.PreExecuteAsync(String fromActivityName, Boolean ignoreCurrentStateCheck, ProcessInstance processInstance, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.PreExecuteFromCurrentActivityAsync(Guid processId, Boolean ignoreCurrentStateCheck, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowRuntime_ProcessStatusChanged(Object sender, ProcessStatusChangedEventArgs e, CancellationToken token)\n   at OptimaJet.Workflow.Core.Utils.AsyncEventHandlerExtensions.InvokeSerialAsync[TEventArgs](AsyncEventHandler`1 handler, Object sender, TEventArgs args, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.InvokeProcessStatusChangedAsync(ProcessStatusChangedEventArgs args)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.SetProcessNewStatusAsync(ProcessInstance processInstance, ProcessStatus newStatus, Boolean suppressEvent)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.SetProcessNewStatusAsync(ProcessInstance processInstance, ProcessStatus newStatus, Boolean suppressEvent)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteCreatedProcessAsync(ProcessInstance processInstance, String identityId, String impersonatedIdentityId, CancellationToken token, ProcessInstancesTree processInstancesTree)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.<>c__DisplayClass11_0.<<InitCreatedProcessAsync>b__1>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Runtime.MultiThreadProcessExecutor.ExecuteAsync(WorkflowRuntime runtime, ProcessInstance processInstance, ProcessStatus status, TransitionDefinition executedTransition, Func`1 needNewThreadCheck, Func`2 action)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T14:48:44.4692854Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessExecutionException)Error Execute Command Workflow Id=4eff0952-b5e5-83b4-6f9f-923746a23df8\n->(ProcessExecutionException)Error while executing implementation of GithubSupport activity of the process, ProcessId=4eff0952-b5e5-83b4-6f9f-923746a23df8\n-->(ArgumentException)Can't be null or empty (Parameter 'name')","Message":"Can't be null or empty (Parameter 'name')","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.GetParameterAsync(String name)\n   at OptimaJet.Workflow.Plugins.BasicPlugin.ConditionCheckParameterAsync(ProcessInstance processInstance, WorkflowRuntime runtime, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Plugins.CustomWorkflowProviders.WorkflowActionProvider`4.ExecuteConditionAsync(String name, ProcessInstance processInstance, WorkflowRuntime runtime, String actionParameter, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.AggregatingActionProvider.ExecuteConditionAsync(String name, ProcessInstance processInstance, WorkflowRuntime runtime, String actionParameter, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteConditionFromProviderAsync(String conditionName, ConditionDefinition condition)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.<>c__DisplayClass34_0.<<CheckConditionsAsync>g__CheckActionCondition|3>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.<>c__DisplayClass34_0.<<CheckConditionsAsync>g__CheckActionConditions|2>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.CheckConditionsAsync(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.TryExecuteConditionalCondition()\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ProcessErrorResponseAsync(ExecutionResponse response, ProcessInstance processInstance, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteFullAsync(ExecutionRequest executionRequest, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.ExecuteCommandAsync(WorkflowCommand command, String identityId, String impersonatedIdentityId, CancellationToken token, Boolean checkRestrictions)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteSelectedCommandAsync(String identityid, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist, WorkflowCommand wfCommand)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteCommandAsync(Guid processId, String identityid, String command, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-20T14:51:27.3029897Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(Exception)The command NotValidated is not found!","Message":"The command NotValidated is not found!","StackTrace":"   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteCommandAsync(Guid processId, String identityid, String command, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-20T20:51:56.9757384Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T20:58:17.2495353Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidJsonParameterValueException)Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","Message":"Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.InitPersistenceParametersFromScheme()\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T20:59:19.0056247Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidJsonParameterValueException)Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","Message":"Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.InitPersistenceParametersFromScheme()\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T20:59:28.8035925Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidJsonParameterValueException)Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","Message":"Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.InitPersistenceParametersFromScheme()\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T20:59:37.9648273Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidJsonParameterValueException)Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","Message":"Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.InitPersistenceParametersFromScheme()\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T20:59:51.5746902Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidJsonParameterValueException)Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","Message":"Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.InitPersistenceParametersFromScheme()\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:00:54.3347306Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidJsonParameterValueException)Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","Message":"Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.InitPersistenceParametersFromScheme()\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:07:46.3057594Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidJsonParameterValueException)Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","Message":"Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.InitPersistenceParametersFromScheme()\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:08:34.7929750Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidJsonParameterValueException)Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","Message":"Initial value of calculate parameter must be a valid JSON or type of calculate parameter must be String","StackTrace":"   at OptimaJet.Workflow.Core.Model.ProcessInstanceParametersProcessor.InitPersistenceParametersFromScheme()\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:10:43.4268856Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:19:33.7867918Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:23:15.1743594Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:24:21.7642928Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:28:10.2504428Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:30:16.6303812Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:34:37.6342747Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidOperationException)(4:17): error CS1002: ; expected\n(4:4): error CS0128: A local variable or function named 'amount' is already defined in this scope","Message":"(4:17): error CS1002: ; expected\n(4:4): error CS0128: A local variable or function named 'amount' is already defined in this scope\n","StackTrace":"   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.Compile(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors, List`1 excludes)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.GetCodeActionsInvoker(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.CompileCodeActions(ProcessDefinition processDefinition, Guid schemeId)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.PrepareProcessDefinition(ProcessDefinition processDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewSchemeAsync(String schemeCode, IDictionary`2 parameters)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewProcessAsync(Guid processId, String schemeCode, IDictionary`2 parameters, String tenantId)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-20T21:35:04.1494865Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(InvalidOperationException)(1:18): error CS1002: ; expected","Message":"(1:18): error CS1002: ; expected\n","StackTrace":"   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.Compile(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors, List`1 excludes)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.GetCodeActionsInvoker(String namespacePostfix, String commonUsings, List`1 codeActionDefinitions, Boolean ignoreNotCompilled, Dictionary`2& compileErrors)\n   at OptimaJet.Workflow.Core.CodeActions.CodeActionsCompiller.CompileCodeActions(ProcessDefinition processDefinition, Guid schemeId)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.PrepareProcessDefinition(ProcessDefinition processDefinition)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewSchemeAsync(String schemeCode, IDictionary`2 parameters)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.CreateNewProcessAsync(Guid processId, String schemeCode, IDictionary`2 parameters, String tenantId)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
