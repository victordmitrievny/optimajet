{"@t":"2024-02-15T13:55:55.1792888Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessNotFoundException)Process with the id = cd1ec152-8d60-60ec-d3e3-89301389825d not found","Message":"Process with the id = cd1ec152-8d60-60ec-d3e3-89301389825d not found","StackTrace":"   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.GetProcessSchemeByProcessIdAsync(Guid processId)\n   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.GetProcessSchemeByProcessIdAsync(Guid processId)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.GetProcessInstanceAsync(Guid processId)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.GetProcessInstanceAndFillProcessParametersAsync(Guid processId)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T13:56:06.9753103Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessNotFoundException)Process with the id = ddfea114-7860-52ab-8350-084047657539 not found","Message":"Process with the id = ddfea114-7860-52ab-8350-084047657539 not found","StackTrace":"   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.GetProcessSchemeByProcessIdAsync(Guid processId)\n   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.GetProcessSchemeByProcessIdAsync(Guid processId)\n   at OptimaJet.Workflow.Core.Builder.WorkflowBuilder`1.GetProcessInstanceAsync(Guid processId)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.GetProcessInstanceAndFillProcessParametersAsync(Guid processId)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T13:56:51.3593708Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessAlreadyExistsException)Process with the id = 3bf04735-d7fc-e02e-f2b0-7ba3cbbacde2 already exists","Message":"Process with the id = 3bf04735-d7fc-e02e-f2b0-7ba3cbbacde2 already exists","StackTrace":"   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.InitializeProcessAsync(ProcessInstance processInstance)\n   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.InitializeProcessAsync(ProcessInstance processInstance)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-15T13:56:52.6810269Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessAlreadyExistsException)Process with the id = 3bf04735-d7fc-e02e-f2b0-7ba3cbbacde2 already exists","Message":"Process with the id = 3bf04735-d7fc-e02e-f2b0-7ba3cbbacde2 already exists","StackTrace":"   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.InitializeProcessAsync(ProcessInstance processInstance)\n   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.InitializeProcessAsync(ProcessInstance processInstance)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-15T13:56:53.7271952Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessAlreadyExistsException)Process with the id = 3bf04735-d7fc-e02e-f2b0-7ba3cbbacde2 already exists","Message":"Process with the id = 3bf04735-d7fc-e02e-f2b0-7ba3cbbacde2 already exists","StackTrace":"   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.InitializeProcessAsync(ProcessInstance processInstance)\n   at OptimaJet.Workflow.PostgreSQL.PostgreSQLProvider.InitializeProcessAsync(ProcessInstance processInstance)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-15T14:49:48.3320510Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T14:55:49.5882498Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(Exception)The command toAlex is not found!","Message":"The command toAlex is not found!","StackTrace":"   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteCommandAsync(Guid processId, String identityid, String command, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-15T14:57:29.2237894Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T15:12:57.0185287Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessExecutionException)Create instance of the process, ProcessId=f70d97ab-71d8-558e-de49-fde4d2843993, failed.\n->(ProcessExecutionException)Error while executing implementation of SetParameter activity of the process, ProcessId=f70d97ab-71d8-558e-de49-fde4d2843993\n-->(Exception)Unable to compile expression: alexid\n--->(CompilationErrorException)(1,28): error CS0103: The name 'alexid' does not exist in the current context","Message":"(1,28): error CS0103: The name 'alexid' does not exist in the current context","StackTrace":"   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.ThrowIfAnyCompilationErrors(DiagnosticBag diagnostics, DiagnosticFormatter formatter)\n   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.CreateExecutor[T](ScriptCompiler compiler, Compilation compilation, Boolean emitDebugInformation, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.GetExecutor(CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, Func`2 catchException, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.RunAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.EvaluateAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetFunction[TResult](String functionName, String namespacePostfix, String expression, String transitionName, String schemeCode)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n----------\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.CompileExpression[TResult](ProcessDefinition processDefinition, Func`2 prepareFunction, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContains[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContainsAndInvokeAsync[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Plugins.BasicPlugin.ActionSetParameterAsync(ProcessInstance processInstance, WorkflowRuntime runtime, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Plugins.Activity.ActivityBaseFromActionAsync.ExecutionAsync(WorkflowRuntime runtime, ProcessInstance processInstance, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsync(ExecutionRequestParameters parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.TryExecuteAlwaysCondition()\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ProcessErrorResponseAsync(ExecutionResponse response, ProcessInstance processInstance, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteFullAsync(ExecutionRequest executionRequest, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteCreatedProcessAsync(ProcessInstance processInstance, String identityId, String impersonatedIdentityId, CancellationToken token, ProcessInstancesTree processInstancesTree)\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteCreatedProcessAsync(ProcessInstance processInstance, String identityId, String impersonatedIdentityId, CancellationToken token, ProcessInstancesTree processInstancesTree)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.<>c__DisplayClass11_0.<<InitCreatedProcessAsync>b__1>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Runtime.MultiThreadProcessExecutor.ExecuteAsync(WorkflowRuntime runtime, ProcessInstance processInstance, ProcessStatus status, TransitionDefinition executedTransition, Func`1 needNewThreadCheck, Func`2 action)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T15:13:04.0856657Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessExecutionException)Create instance of the process, ProcessId=a7263d22-557f-253e-7637-efb6f21544e6, failed.\n->(ProcessExecutionException)Error while executing implementation of SetParameter activity of the process, ProcessId=a7263d22-557f-253e-7637-efb6f21544e6\n-->(Exception)Unable to compile expression: alexid\n--->(CompilationErrorException)(1,28): error CS0103: The name 'alexid' does not exist in the current context","Message":"(1,28): error CS0103: The name 'alexid' does not exist in the current context","StackTrace":"   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.ThrowIfAnyCompilationErrors(DiagnosticBag diagnostics, DiagnosticFormatter formatter)\n   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.CreateExecutor[T](ScriptCompiler compiler, Compilation compilation, Boolean emitDebugInformation, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.GetExecutor(CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, Func`2 catchException, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.RunAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.EvaluateAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetFunction[TResult](String functionName, String namespacePostfix, String expression, String transitionName, String schemeCode)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n----------\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.CompileExpression[TResult](ProcessDefinition processDefinition, Func`2 prepareFunction, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContains[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContainsAndInvokeAsync[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Plugins.BasicPlugin.ActionSetParameterAsync(ProcessInstance processInstance, WorkflowRuntime runtime, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Plugins.Activity.ActivityBaseFromActionAsync.ExecutionAsync(WorkflowRuntime runtime, ProcessInstance processInstance, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsync(ExecutionRequestParameters parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.TryExecuteAlwaysCondition()\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ProcessErrorResponseAsync(ExecutionResponse response, ProcessInstance processInstance, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteFullAsync(ExecutionRequest executionRequest, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteCreatedProcessAsync(ProcessInstance processInstance, String identityId, String impersonatedIdentityId, CancellationToken token, ProcessInstancesTree processInstancesTree)\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteCreatedProcessAsync(ProcessInstance processInstance, String identityId, String impersonatedIdentityId, CancellationToken token, ProcessInstancesTree processInstancesTree)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.<>c__DisplayClass11_0.<<InitCreatedProcessAsync>b__1>d.MoveNext()\n--- End of stack trace from previous location ---\n   at OptimaJet.Workflow.Core.Runtime.MultiThreadProcessExecutor.ExecuteAsync(WorkflowRuntime runtime, ProcessInstance processInstance, ProcessStatus status, TransitionDefinition executedTransition, Func`1 needNewThreadCheck, Func`2 action)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.InitCreatedProcessAsync(String identityId, String impersonatedIdentityId, ProcessInstance processInstance, IDictionary`2 initialProcessParameters, CancellationToken token, ProcessInstancesTree processInstancesTree, TransitionDefinition startingTransition, List`1 persist)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.CreateInstanceAsync(CreateInstanceParams createInstanceParams, CancellationToken token)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T15:13:33.9373902Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T15:13:50.5723941Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessExecutionException)Error Execute Command Workflow Id=004c6979-bbfa-c72d-2e76-68797c0b6331\n->(ProcessExecutionException)Error while executing implementation of SetParameter activity of the process, ProcessId=004c6979-bbfa-c72d-2e76-68797c0b6331\n-->(Exception)Unable to compile expression: alexid\n--->(CompilationErrorException)(1,28): error CS0103: The name 'alexid' does not exist in the current context","Message":"(1,28): error CS0103: The name 'alexid' does not exist in the current context","StackTrace":"   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.ThrowIfAnyCompilationErrors(DiagnosticBag diagnostics, DiagnosticFormatter formatter)\n   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.CreateExecutor[T](ScriptCompiler compiler, Compilation compilation, Boolean emitDebugInformation, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.GetExecutor(CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, Func`2 catchException, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.RunAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.EvaluateAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetFunction[TResult](String functionName, String namespacePostfix, String expression, String transitionName, String schemeCode)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n----------\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.CompileExpression[TResult](ProcessDefinition processDefinition, Func`2 prepareFunction, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContains[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContainsAndInvokeAsync[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Plugins.BasicPlugin.ActionSetParameterAsync(ProcessInstance processInstance, WorkflowRuntime runtime, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Plugins.Activity.ActivityBaseFromActionAsync.ExecutionAsync(WorkflowRuntime runtime, ProcessInstance processInstance, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsync(ExecutionRequestParameters parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.TryExecuteAlwaysCondition()\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ProcessErrorResponseAsync(ExecutionResponse response, ProcessInstance processInstance, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteFullAsync(ExecutionRequest executionRequest, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.ExecuteCommandAsync(WorkflowCommand command, String identityId, String impersonatedIdentityId, CancellationToken token, Boolean checkRestrictions)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteSelectedCommandAsync(String identityid, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist, WorkflowCommand wfCommand)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteCommandAsync(Guid processId, String identityid, String command, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-15T15:15:27.7675658Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessExecutionException)Error Execute Command Workflow Id=004c6979-bbfa-c72d-2e76-68797c0b6331\n->(ProcessExecutionException)Error while executing implementation of SetParameter activity of the process, ProcessId=004c6979-bbfa-c72d-2e76-68797c0b6331\n-->(Exception)Unable to compile expression: alexid\n--->(CompilationErrorException)(1,28): error CS0103: The name 'alexid' does not exist in the current context","Message":"(1,28): error CS0103: The name 'alexid' does not exist in the current context","StackTrace":"   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.ThrowIfAnyCompilationErrors(DiagnosticBag diagnostics, DiagnosticFormatter formatter)\n   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.CreateExecutor[T](ScriptCompiler compiler, Compilation compilation, Boolean emitDebugInformation, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.GetExecutor(CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, Func`2 catchException, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.RunAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.EvaluateAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetFunction[TResult](String functionName, String namespacePostfix, String expression, String transitionName, String schemeCode)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n----------\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.CompileExpression[TResult](ProcessDefinition processDefinition, Func`2 prepareFunction, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContains[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContainsAndInvokeAsync[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Plugins.BasicPlugin.ActionSetParameterAsync(ProcessInstance processInstance, WorkflowRuntime runtime, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Plugins.Activity.ActivityBaseFromActionAsync.ExecutionAsync(WorkflowRuntime runtime, ProcessInstance processInstance, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsync(ExecutionRequestParameters parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.TryExecuteAlwaysCondition()\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ProcessErrorResponseAsync(ExecutionResponse response, ProcessInstance processInstance, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteFullAsync(ExecutionRequest executionRequest, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.ExecuteCommandAsync(WorkflowCommand command, String identityId, String impersonatedIdentityId, CancellationToken token, Boolean checkRestrictions)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteSelectedCommandAsync(String identityid, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist, WorkflowCommand wfCommand)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteCommandAsync(Guid processId, String identityid, String command, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-15T15:16:20.0710641Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T15:16:31.7152363Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessExecutionException)Error Execute Command Workflow Id=ffb710ad-64e8-528d-e16d-a0171d20531d\n->(ProcessExecutionException)Error while executing implementation of SetParameter activity of the process, ProcessId=ffb710ad-64e8-528d-e16d-a0171d20531d\n-->(Exception)Unable to compile expression: alexid\n--->(CompilationErrorException)(1,28): error CS0103: The name 'alexid' does not exist in the current context","Message":"(1,28): error CS0103: The name 'alexid' does not exist in the current context","StackTrace":"   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.ThrowIfAnyCompilationErrors(DiagnosticBag diagnostics, DiagnosticFormatter formatter)\n   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.CreateExecutor[T](ScriptCompiler compiler, Compilation compilation, Boolean emitDebugInformation, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.GetExecutor(CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, Func`2 catchException, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.RunAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.EvaluateAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetFunction[TResult](String functionName, String namespacePostfix, String expression, String transitionName, String schemeCode)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n----------\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.CompileExpression[TResult](ProcessDefinition processDefinition, Func`2 prepareFunction, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContains[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContainsAndInvokeAsync[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Plugins.BasicPlugin.ActionSetParameterAsync(ProcessInstance processInstance, WorkflowRuntime runtime, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Plugins.Activity.ActivityBaseFromActionAsync.ExecutionAsync(WorkflowRuntime runtime, ProcessInstance processInstance, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsync(ExecutionRequestParameters parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.TryExecuteAlwaysCondition()\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ProcessErrorResponseAsync(ExecutionResponse response, ProcessInstance processInstance, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteFullAsync(ExecutionRequest executionRequest, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.ExecuteCommandAsync(WorkflowCommand command, String identityId, String impersonatedIdentityId, CancellationToken token, Boolean checkRestrictions)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteSelectedCommandAsync(String identityid, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist, WorkflowCommand wfCommand)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteCommandAsync(Guid processId, String identityid, String command, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
{"@t":"2024-02-15T15:17:18.0475988Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(PostgresException)2201X: OFFSET must not be negative","Message":"2201X: OFFSET must not be negative","StackTrace":"   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlConnector.<>c__DisplayClass160_0.<<DoReadMessage>g__ReadMessageLong|0>d.MoveNext()\n--- End of stack trace from previous location ---\n   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming)\n   at Npgsql.NpgsqlCommand.ExecuteReaderAsync(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(PostgreSQLProvider provider, DatabaseOperationsInstanceOptions options, WorkflowRuntime workflowRuntime)\n   at OptimaJet.WorkflowServer.DatabaseOperations.GetInstancesAsync(WorkflowRuntime wfruntime, DatabaseOperationsInstanceOptions options)\n   at OptimaJet.WorkflowServer.ConfigApi.WorkflowProcessingAsync(WorkflowServerRuntime workflowServerRuntime, NameValueCollection form)\n   at OptimaJet.WorkflowServer.ConfigApi.ConfigAPI(WorkflowServerRuntime workflowServerRuntime, HttpRequest request, NameValueCollection form, Stream filestream)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ConfigApiProcessingAsync(HttpRequest request)"}}
{"@t":"2024-02-15T15:17:38.0067211Z","@mt":"Caught an exception","@l":"Error","ExceptionInfo":{"Exeptions":"(ProcessExecutionException)Error Execute Command Workflow Id=554faab9-d0d8-d124-ee0c-6e990ee29b2a\n->(ProcessExecutionException)Error while executing implementation of SetParameter activity of the process, ProcessId=554faab9-d0d8-d124-ee0c-6e990ee29b2a\n-->(Exception)Unable to compile expression: alexid\n--->(CompilationErrorException)(1,28): error CS0103: The name 'alexid' does not exist in the current context","Message":"(1,28): error CS0103: The name 'alexid' does not exist in the current context","StackTrace":"   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.ThrowIfAnyCompilationErrors(DiagnosticBag diagnostics, DiagnosticFormatter formatter)\n   at Microsoft.CodeAnalysis.Scripting.ScriptBuilder.CreateExecutor[T](ScriptCompiler compiler, Compilation compilation, Boolean emitDebugInformation, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.GetExecutor(CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, Func`2 catchException, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Scripting.Script`1.RunAsync(Object globals, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.RunAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.EvaluateAsync[T](String code, ScriptOptions options, Object globals, Type globalsType, CancellationToken cancellationToken)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetFunction[TResult](String functionName, String namespacePostfix, String expression, String transitionName, String schemeCode)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n----------\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.GetExpression[TResult](String expressionString, String namespacePostfix, String schemeCode, String functionName, Boolean ignoreExceptions)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionsCompiler.CompileExpression[TResult](ProcessDefinition processDefinition, Func`2 prepareFunction, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContains[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Core.CodeActions.ExpressionManager.CompileIfNotContainsAndInvokeAsync[TResult](ProcessInstance processInstance, String expressionString, Boolean ignoreExceptions, String functionName)\n   at OptimaJet.Workflow.Plugins.BasicPlugin.ActionSetParameterAsync(ProcessInstance processInstance, WorkflowRuntime runtime, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Plugins.Activity.ActivityBaseFromActionAsync.ExecutionAsync(WorkflowRuntime runtime, ProcessInstance processInstance, Dictionary`2 parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsync(ExecutionRequestParameters parameters, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.ExecuteMethodAsyncWithHandling(ExecutionRequestParameters parameters)\n   at OptimaJet.Workflow.Core.Execution.ActivityExecutor.TryExecuteAlwaysCondition()\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ProcessErrorResponseAsync(ExecutionResponse response, ProcessInstance processInstance, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteFullAsync(ExecutionRequest executionRequest, CancellationToken token)\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n----------\n   at OptimaJet.Workflow.Core.Execution.ProcessExecutor.ExecuteTriggeredTransitionsAsync(ProcessInstance processInstance, List`1 transitions, TriggerType type, CancellationToken token)\n   at OptimaJet.Workflow.Core.Runtime.WorkflowRuntime.ExecuteCommandAsync(WorkflowCommand command, String identityId, String impersonatedIdentityId, CancellationToken token, Boolean checkRestrictions)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteSelectedCommandAsync(String identityid, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist, WorkflowCommand wfCommand)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.ExecuteCommandAsync(Guid processId, String identityid, String command, String impersonatedIdentityId, Dictionary`2 queryDictioanary, List`1 persist)\n   at OptimaJet.WorkflowServer.WorkflowServerRuntime.WorkflowApiProcessingAsync(HttpRequest request, String operation, String pathParameter)"}}
